// --------------------------------------------------
// STANDARD ENEMIES
//

// --------------------------------------------------
// Class: Former Human

ACTOR Robot_SentryBotRPG : Robot_SentryBot Replaces Robot_SentryBot
{
    Tag "Sentry Bot"

    DropItem "DRPGClipSpawner"

	States
	{
	Spawn:
		STRY A 0 NoDelay ACS_NamedExecuteAlways("MonsterInit", 0)
		Goto Super::Spawn
	See:
		STRY A 0 ACS_NamedExecuteAlways("MonsterInit", 0)
		Goto Super::See
	}
}

// --------------------------------------------------
// Class: Former Sergeant

ACTOR Robot_DefenderBotRPG : Robot_DefenderBot Replaces Robot_DefenderBot
{
    Tag "Defender Bot"

    DropItem "DRPGShotgun", 48
    DropItem "DRPGShellSpawner", 208

	States
	{
	Spawn:
		DFNB A 0 NoDelay ACS_NamedExecuteAlways("MonsterInit", 0)
		Goto Super::Spawn
	See:
		DFNB A 0 ACS_NamedExecuteAlways("MonsterInit", 0)
		Goto Super::See
	}
}

// --------------------------------------------------
// Class: Former Commando

ACTOR Robot_SecurityBotSmallRPG : Robot_SecurityBotSmall Replaces Robot_SecurityBotSmall
{
    Tag "Security Bot Small"

    DropItem "DRPGChaingun", 48
    DropItem "DRPGClipBoxSpawner", 208

	States
	{
	Spawn:
		SECB A 0 NoDelay ACS_NamedExecuteAlways("MonsterInit", 0)
		Goto Super::Spawn
	See:
		SECB A 0 ACS_NamedExecuteAlways("MonsterInit", 0)
		Goto Super::See
	}
}

// --------------------------------------------------
// Class: Imp

ACTOR Robot_SoldierBotRPG : Robot_SoldierBot Replaces Robot_SoldierBot
{
    Tag "Soldier Bot"

	States
	{
	Spawn:
		SDBT A 0 NoDelay ACS_NamedExecuteAlways("MonsterInit", 0)
		Goto Super::Spawn
	See:
		SDBT A 0 ACS_NamedExecuteAlways("MonsterInit", 0)
		Goto Super::See
	}
}

// --------------------------------------------------
// Class: Demon

ACTOR Robot_SpiderBotSmallRPG : Robot_SpiderBotSmall Replaces Robot_SpiderBotSmall
{
    Tag "Spider Bot Small"

	States
	{
	Spawn:
		SPD2 A 0 NoDelay ACS_NamedExecuteAlways("MonsterInit", 0)
		Goto Super::Spawn
	See:
		SPD2 A 0 ACS_NamedExecuteAlways("MonsterInit", 0)
		Goto Super::See
	}
}

// --------------------------------------------------
// Class: Spectre

ACTOR Robot_StealthDroidRPG : Robot_StealthDroid Replaces Robot_StealthDroid
{
    Tag "Stealth Droid"

	States
	{
	Spawn:
		PROT A 0 NoDelay ACS_NamedExecuteAlways("MonsterInit", 0)
		Goto Super::Spawn
	See:
		PROT A 0 ACS_NamedExecuteAlways("MonsterInit", 0)
		Goto Super::See
	}
}

// --------------------------------------------------
// Class: Lost Soul

ACTOR Robot_ScoutDroneRPG : Robot_ScoutDrone Replaces Robot_ScoutDrone
{
    Tag "Scout Drone"

    States
    {
    Spawn:
		// ----- Lost Souls that are not map-based should not have their kills and XP taken into account due to possible spawn spam (Pain Elementals for example). ----- //
    	// Check if monster is map-based.
    	SCDR A 0 NoDelay A_JumpIf(GetLevelSpawnTime() == 0, 4)
    	// Not map-based.
    	SCDR A 0 ACS_NamedExecuteAlways("MonsterInit", 0, MF_NOXP | MF_NOAURA | MF_NODROPS)
    	SCDR A 0 A_ChangeFlag("COUNTKILL", false)
    	SCDR A 0 A_Jump(256, 2)
    	// Map-based.
    	SCDR A 0 ACS_NamedExecuteAlways("MonsterInit", 0, MF_NOAURA | MF_NODROPS)
    	TNT1 A 0
        Goto Super::Spawn
    See:
		// ----- Lost Souls that are not map-based should not have their kills and XP taken into account due to possible spawn spam (Pain Elementals for example). ----- //
    	// Check if monster is map-based.
    	SCDR A 0 A_JumpIf(GetLevelSpawnTime() == 0, 4)
    	// Not map-based.
    	SCDR A 0 ACS_NamedExecuteAlways("MonsterInit", 0, MF_NOXP | MF_NOAURA | MF_NODROPS)
    	SCDR A 0 A_ChangeFlag("COUNTKILL", false)
    	SCDR A 0 A_Jump(256, 2)
    	// Map-based.
    	SCDR A 0 ACS_NamedExecuteAlways("MonsterInit", 0, MF_NOAURA | MF_NODROPS)
    	TNT1 A 0
        Goto Super::See
    }
}

// --------------------------------------------------
// Class: Cacodemon

ACTOR Robot_AssaultDroneRPG : Robot_AssaultDrone Replaces Robot_AssaultDrone
{
    Tag "Assault Drone"

	States
	{
	Spawn:
		ASTD A 0 NoDelay ACS_NamedExecuteAlways("MonsterInit", 0)
		Goto Super::Spawn
	See:
		ASTD A 0 ACS_NamedExecuteAlways("MonsterInit", 0)
		Goto Super::See
	}
}

// --------------------------------------------------
// Class: Hell Knight

ACTOR Robot_SecurityBotRPG : Robot_SecurityBot Replaces Robot_SecurityBot
{
    Tag "Security Bot"

	States
	{
	Spawn:
		SCBT A 0 NoDelay ACS_NamedExecuteAlways("MonsterInit", 0)
		Goto Super::Spawn
	See:
		SCBT A 0 ACS_NamedExecuteAlways("MonsterInit", 0)
		Goto Super::See
	}
}

// --------------------------------------------------
// Class: Baron Of Hell

ACTOR Robot_DreadnoughtBotRPG : Robot_DreadnoughtBot Replaces Robot_DreadnoughtBot
{
    Tag "Dreadnought Bot"

	States
	{
	Spawn:
		DRDB A 0 NoDelay ACS_NamedExecuteAlways("MonsterInit", 0)
		Goto Super::Spawn
	See:
		DRDB A 0 ACS_NamedExecuteAlways("MonsterInit", 0)
		Goto Super::See
	}
}

// --------------------------------------------------
// Class: Arachnotron

ACTOR Robot_SpiderBotRPG : Robot_SpiderBot Replaces Robot_SpiderBot
{
    Tag "Spider Bot"

	States
	{
	Spawn:
		SPDB A 0 NoDelay ACS_NamedExecuteAlways("MonsterInit", 0)
		Goto Super::Spawn
	See:
		SPDB A 0 ACS_NamedExecuteAlways("MonsterInit", 0)
		Goto Super::See
	}
}

// --------------------------------------------------
// Class: Pain Elemental

ACTOR Robot_FabricationNodeRPG : Robot_FabricationNode Replaces Robot_FabricationNode
{
    Tag "Fabrication Node"

	States
	{
	Spawn:
		FABN A 0 NoDelay ACS_NamedExecuteAlways("MonsterInit", 0)
		Goto Super::Spawn
	See:
		FABN A 0 ACS_NamedExecuteAlways("MonsterInit", 0)
		Goto Super::See
	}
}

// --------------------------------------------------
// Class: Revenant

ACTOR Robot_RollerDroidRPG : Robot_RollerDroid Replaces Robot_RollerDroid
{
    Tag "Roller Droid"

	States
	{
	Spawn:
		RLRD A 0 NoDelay ACS_NamedExecuteAlways("MonsterInit", 0)
		Goto Super::Spawn
	See:
		RLRD A 0 ACS_NamedExecuteAlways("MonsterInit", 0)
		Goto Super::See
	}
}

// --------------------------------------------------
// Class: Mancubus

ACTOR Robot_MaintenanceBotRPG : Robot_MaintenanceBot Replaces Robot_MaintenanceBot
{
    Tag "Maintenance Bot"

	States
	{
	Spawn:
		MNTB A 0 NoDelay ACS_NamedExecuteAlways("MonsterInit", 0)
		Goto Super::Spawn
	See:
		MNTB A 0 ACS_NamedExecuteAlways("MonsterInit", 0)
		Goto Super::See
	}
}

// --------------------------------------------------
// Class: Archvile

ACTOR Robot_RepairBotRPG : Robot_RepairBot Replaces Robot_RepairBot
{
    Tag "Repair Bot"

	States
	{
	Spawn:
		REPB A 0 NoDelay ACS_NamedExecuteAlways("MonsterInit", 0)
		Goto Super::Spawn
	See:
		REPB A 0 ACS_NamedExecuteAlways("MonsterInit", 0)
		Goto Super::See
	}
}

// --------------------------------------------------
// Class: Cyberdemon

ACTOR Robot_MilitaryBotRPG : Robot_MilitaryBot Replaces Robot_MilitaryBot
{
    Tag "Military Bot"

	States
	{
	Spawn:
		MILB A 0 NoDelay ACS_NamedExecuteAlways("MonsterInit", 0, MF_BOSS)
		Goto Super::Spawn
	See:
		MILB A 0 ACS_NamedExecuteAlways("MonsterInit", 0, MF_BOSS)
		Goto Super::See
	}
}

// --------------------------------------------------
// Class: Spider Mastermind

ACTOR Robot_LoaderBotRPG : Robot_LoaderBot Replaces Robot_LoaderBot
{
    Tag "Loader Bot"

	States
	{
	Spawn:
		LDRB A 0 NoDelay ACS_NamedExecuteAlways("MonsterInit", 0, MF_BOSS)
		Goto Super::Spawn
	See:
		LDRB A 0 ACS_NamedExecuteAlways("MonsterInit", 0, MF_BOSS)
		Goto Super::See
	}
}

// --------------------------------------------------
// FINAL BOSSES ENEMIES
//

// The Boss Brain needs special handling for the exit script
ACTOR Robot_BossBrainRPG : Robot_BossBrain Replaces DRPGBossBrain
{
    Tag "Boss Brain"

    States
    {
    Spawn:
        TNT1 A 0 NoDelay ACS_NamedExecuteAlways("MonsterInit", 0, MF_NOXP | MF_NOSTATS | MF_NOAURA | MF_NOPAYKILL | MF_NODROPS | MF_NOHEALTHBAR)
        Goto Super::Spawn
    Death:
        TNT1 A 0 ACS_Execute(30000, 0)
        Goto Super::Death
    }
}

// GunTurret
ACTOR Robot_GunTurretRPG : Robot_GunTurret Replaces Robot_GunTurret
{
    Tag "Gun Turret"

	States
	{
	Spawn:
		GTR1 A 0 NoDelay ACS_NamedExecuteAlways("MonsterInit", 0)
		Goto Super::Spawn
	See:
		GTR1 A 0 ACS_NamedExecuteAlways("MonsterInit", 0)
		Goto Super::See
	}
}

// --------------------------------------------------
// REPLACES SPAWNERS ENEMIES
//

ACTOR Robot_SentryBot2 : Robot_SentryBotRPG Replaces DRPGZombieMan {}
ACTOR Robot_DefenderBot2 : Robot_DefenderBotRPG Replaces DRPGShotgunGuy {}
ACTOR Robot_SecurityBotSmall2 : Robot_SecurityBotSmallRPG Replaces DRPGChaingunGuy {}
ACTOR Robot_SoldierBot2 : Robot_SoldierBotRPG Replaces DRPGDoomImp {}
ACTOR Robot_SpiderBotSmall2 : Robot_SpiderBotSmallRPG Replaces DRPGDemon {}
ACTOR Robot_StealthDroid2 : Robot_StealthDroidRPG Replaces DRPGSpectre {}
ACTOR Robot_ScoutDrone2 : Robot_ScoutDroneRPG Replaces DRPGLostSoul {}
ACTOR Robot_AssaultDrone2 : Robot_AssaultDroneRPG Replaces DRPGCacodemon {}
ACTOR Robot_SecurityBot2 : Robot_SecurityBotRPG Replaces DRPGHellKnight {}
ACTOR Robot_DreadnoughtBot2 : Robot_DreadnoughtBotRPG Replaces DRPGBaronOfHell {}
ACTOR Robot_SpiderBot2 : Robot_SpiderBotRPG Replaces DRPGArachnotron {}
ACTOR Robot_FabricationNode2 : Robot_FabricationNodeRPG Replaces DRPGPainElemental {}
ACTOR Robot_RollerDroid2 : Robot_RollerDroidRPG Replaces DRPGRevenant {}
ACTOR Robot_MaintenanceBot2 : Robot_MaintenanceBotRPG Replaces DRPGFatso {}
ACTOR Robot_RepairBot2 : Robot_RepairBotRPG Replaces DRPGArchvile {}
ACTOR Robot_MilitaryBot2 : Robot_MilitaryBotRPG Replaces DRPGCyberdemon {}
ACTOR Robot_LoaderBot2 : Robot_LoaderBotRPG Replaces DRPGSpiderMastermind {}